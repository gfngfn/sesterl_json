import Decode

module Json :> sig
  module Decode : sig
    type t :: (o) -> o
    type error =
      | NotAValidJson
      | NotABoolean
      | NotAnInteger
      | NotAString
      | MissingField(binary)
    val succeed<$a> : fun($a) -> t<$a>
    val bool : fun() -> t<bool>
    val int : fun() -> t<int>
    val string : fun() -> t<binary>
    val list<$a> : fun(t<$a>) -> t<list<$a>>
    val bind<$a, $b> : fun(t<$a>, fun($a) -> t<$b>) -> t<$b>
    val run<$a> : fun(t<$a>, binary) -> result<$a, error>
  end
end = struct
  module Decode = Decode
end
